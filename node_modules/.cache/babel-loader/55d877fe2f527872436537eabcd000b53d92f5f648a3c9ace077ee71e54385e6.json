{"ast":null,"code":"export async function Download() {\n  const urlInput = document.getElementById('urlinput');\n  const url = urlInput.value;\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      url: url\n    })\n  };\n  fetch('http://localhost:1234/download', options).then(response => {\n    if (response.status == 500) {\n      document.getElementById(\"error-message\").innerText = \"INVALID URL\";\n      return;\n    }\n    return response.blob();\n  }).then(blob => {\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'youzay.mp4';\n    link.click();\n    document.getElementById(\"error-message\").innerText = \"\";\n  }).catch(error => {\n    console.log(\"Something went wrong\");\n  });\n}\n_c = Download;\nvar _c;\n$RefreshReg$(_c, \"Download\");","map":{"version":3,"names":["Download","urlInput","document","getElementById","url","value","options","method","headers","body","JSON","stringify","fetch","then","response","status","innerText","blob","URL","createObjectURL","link","createElement","href","download","click","catch","error","console","log","_c","$RefreshReg$"],"sources":["C:/Users/jasmi/Documents/React/youzay/client/src/api/download.js"],"sourcesContent":["export async function Download() {\r\n    const urlInput = document.getElementById('urlinput');\r\n    const url = urlInput.value;\r\n    \r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ url: url })\r\n    };\r\n    fetch('http://localhost:1234/download', options)\r\n    .then(response => {\r\n      if (response.status == 500) {\r\n        document.getElementById(\"error-message\").innerText = \"INVALID URL\"\r\n        return\r\n      }\r\n      return response.blob();\r\n    })\r\n    .then(blob => {\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'youzay.mp4';\r\n      link.click();\r\n      document.getElementById(\"error-message\").innerText = \"\"\r\n    })\r\n    .catch(error => {\r\n      console.log(\"Something went wrong\")\r\n    });\r\n  }"],"mappings":"AAAA,OAAO,eAAeA,QAAQA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;EACpD,MAAMC,GAAG,GAAGH,QAAQ,CAACI,KAAK;EAE1B,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,GAAG,EAAEA;IAAI,CAAC;EACnC,CAAC;EACDQ,KAAK,CAAC,gCAAgC,EAAEN,OAAO,CAAC,CAC/CO,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;MAC1Bb,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACa,SAAS,GAAG,aAAa;MAClE;IACF;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDJ,IAAI,CAACI,IAAI,IAAI;IACZ,MAAMb,GAAG,GAAGc,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC;IACrC,MAAMG,IAAI,GAAGlB,QAAQ,CAACmB,aAAa,CAAC,GAAG,CAAC;IACxCD,IAAI,CAACE,IAAI,GAAGlB,GAAG;IACfgB,IAAI,CAACG,QAAQ,GAAG,YAAY;IAC5BH,IAAI,CAACI,KAAK,CAAC,CAAC;IACZtB,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACa,SAAS,GAAG,EAAE;EACzD,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC,CAAC,CAAC;AACJ;AAACC,EAAA,GA9BmB7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}